swagger: '2.0'
schemes: [ https ]
host: api.logz.io
basePath: /v1
produces: [ application/json ]
consumes: [ application/json ]
info:
  description: |
    # Introduction

    This API is documented using the **OpenAPI 2.0** specification. You can browse the API documentation on this page, or you can download the specification file.

    ### Updates and improvements

    We update this document regularly to reflect changes to the Logz.io API. If you'd like to suggest corrections or improvements to this document, please email us at [support@logz.io](mailto:support@logz.io) or click **Edit** at the top of this page.

    # Authentication and rate limiting

    <!-- ReDoc-Inject: <security-definitions> -->

    The Logz.io API is available to Enterprise plan subscribers. You can create a new API key in your [account settings](https://app.logz.io/#/dashboard/settings/manage-accounts_). You can also set and revoke API permissions at any time.

    If you don't have an Enterprise account, we encourage you to sign up for a [free trial](https://logz.io/signup/freetrial.php).


  version: 1.0.0
  title: Logzio API
  termsOfService: 'https://logz.io/about-us/terms-of-use/'
  contact:
    email: help@logz.io
    url: https://logz.io/
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

securityDefinitions:
  API key:
    description: This is used in most of our endpoints. If no other security methods are used, this one wins.
    type: apiKey
    in: header
    name: X-API-KEY
security:
  - API key: []

tags:
# ::::: ACCOUNTS TAGS
  - name: Retrieve accounts
    description: Retreive partial or detailed account information
  - name: Create, update, or delete accounts
    description: Make a new account, or modify an existing account

# ::::: TRIGGERS - ALERTS TAGS
  - name: Retrieve alert definitions
    description: Retrieve a list of alert definitions. Each item in the list returns the alert query and settings.
  # - name: Retrieve triggered alerts
  #   description: Retrieve a list of alerts triggered in your accounts.
  - name: Create, update, or delete alert definitions
    description: Make a new alert definition, or modify an existing alert definition

# ::::: TRIGGERS - OPTIMIZER TAGS
  - name: Retrieve optimizer definitions
    description: Retrieve a list of optimizer definitions. Each item in the list returns the optimizer query and settings.
  - name: Create, update, or delete optimizer definitions
    description: Make a new optimizer definition, or modify an existing optimizer definition

# ::::: SEARCH TAGS
  - name: Search logs
    description: Use the /search resource to run search queries on your Logz.io data. The query language used is Elasticsearch Search API DSL, with some limitations. To ensure system performance, we've restricted some options from the Elasticsearch defaults.

x-tagGroups:
  - name: Accounts
    tags:
      - Retrieve accounts
      - Create, update, or delete accounts
  - name: Alerts
    tags:
      - Retrieve alert definitions
      # - Retrieve triggered alerts
      - Create, update, or delete alert definitions
  - name: Optimizers
    tags:
      - Retrieve optimizer definitions
      - Create, update, or delete optimizer definitions
  - name: Search
    tags:
      - Search logs


paths:
# ::::: ACCOUNTS
  /account-management/time-based-accounts:
    get:
      summary: Retrieve sub accounts
      tags:
        - Retrieve accounts
      operationId: getAll
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/TimeBasedAccount'
      x-code-samples:
      - lang: Shell
        source: |
          curl --request GET --url https://api.logz.io/v1/account-management/time-based-accounts --header 'X-API-TOKEN: {API key}'
    post:
      summary: Create a time-based account
      tags:
        - Create, update, or delete accounts
      operationId: createTimeBasedAccount
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/TimeBasedAccountUpsertRequest'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/TimeBasedAccountCreationResponse'
      x-code-samples:
      - lang: Shell
        source: |
          curl -X POST \
            https://api.logz.io/v1/account-management/time-based-accounts \
            -H 'X-API-TOKEN: {API key}' \
            -d '{
            "email": "support@logz.io",
            "accountName": "AWS Lambda svr 3",
            "maxDailyGB": 5,
            "retentionDays": 5,
            "searchable": true,
            "accessible": false,
            "sharingObjectsAccounts": [
              48672,
              36259
            ],
            "docSizeSetting": true,
            "utilizationSettings": {
              "frequencyMinutes": 5,
              "utilizationEnabled": true
            }
          }'
  /account-management/time-based-accounts/detailed:
    get:
      summary: Retrieve all time-based accounts
      description: This endpoint retrieves detailed information on the time-based accounts, which includes the main account and any sub accounts
      tags:
        - Retrieve accounts
      operationId: getAllDetailedTimeBasedAccount
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DetailedTimeBasedAccount'
      x-code-samples:
      - lang: Shell
        source: |
          curl -X GET https://api.logz.io/v1/account-management/time-based-accounts/detailed -H 'X-API-TOKEN: {API key}'
  /account-management/time-based-accounts/detailed/{id}:
    get:
      summary: Retrieve detailed account information by account ID
      tags:
        - Retrieve accounts
      operationId: getDetailedTimeBasedAccount
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the account to be retrieved
          x-example: 99999
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DetailedTimeBasedAccount'
      x-code-samples:
      - lang: Shell
        source: "curl -X GET https://api.logz.io/v1/account-management/time-based-accounts/detailed/99999 -H 'X-API-TOKEN: {API key}'"
  /account-management/time-based-accounts/{id}:
    get:
      summary: Retrieve account by ID
      tags:
        - Retrieve accounts
      operationId: get
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the account to be retrieved
          x-example: 99999
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/TimeBasedAccount'
      x-code-samples:
      - lang: Shell
        source: "curl -X GET https://api.logz.io/v1/account-management/time-based-accounts/99999 -H 'X-API-TOKEN: {API key}'"
    put:
      summary: Update a time-based account
      tags:
        - Create, update, or delete accounts
      operationId: updateTimeBasedAccount
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the account to be updated
          x-example: 99999
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/TimeBasedAccountUpsertRequest'
          description: "??"
      responses:
        200:
          description: successful operation
    delete:
      summary: Delete a time-based account
      tags:
        - Create, update, or delete accounts
      operationId: deleteTimeBasedAccount
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the account to be deleted.
          x-example: 99999
      responses:
        200:
          description: successful operation

# ::::: SEARCH
  /search:
    post:
      summary: Run an Elasticsearch query
      tags:
        - Search logs
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - query
            properties:
              from:
                type: number
                default: 0
                description: ??description
              size:
                type: number
                description: Number of results to return
                default: 10
              sort:
                type: array
                description: Array that allows sorting by specific fields. Each array item contains a field name and sort parameters. See [Elasticsearch Sort](https://www.elastic.co/guide/en/elasticsearch/reference/5.5/search-request-sort.html) for more information.
                items:
                  type: object
              _source:
                type: array
                description: >-
                  * _Option 1:_ A single item to say whether you want to return the `_source` field.

                  * _Option 2:_ An array of fields to return.
                items:
                  - type: boolean
                    description: To return the `_source` field, `true`. Otherwise, `false`.
                    example: true
                  - type: string
                    description: Fields to return.
              post_filter:
                type: object
              # aggs:
              # aggregations:
      responses:
        200:
          description: successful query
          schema:
            type: object
            example: { "hits": { "total": 339604, "max_score": 0, "hits": [] }, "aggregations": { "byType": { "doc_count_error_upper_bound": 0, "sum_other_doc_count": 44879, "buckets": [ { "key": "web-app", "doc_count": 163690 }, { "key": "core-service", "doc_count": 64893 } ] } } }
        400:
          description: invalid query
          schema:
            type: string
            description: >-
              Possible responses:
                * `Found JSON elements which are not allowed ...`
                * `... query_string.allow_leading_wildcard not allowed to be true`
                * `... 'wildcard' queries are not allowed to start with '*' or '?'`
                * `... contains a wildcard search with leading wildcard which is not allowed ...`
                * `Query has failed. Elasticsearch Response: ...`
                * `Query syntax (in 'query' field) is invalid: ...`
                * `This search can't be executed: ... Please contact customer support for more details`
            example: Found JSON elements which are not allowed ...
        403:
          description: access forbidden
          schema:
            type: string
            description: >-
              `Your account is not allowed to use Search API. Please contact support/sales to enable this feature for you`
            example: Your account is not allowed to use Search API. Please contact support/sales to enable this feature for you
        429:
          description: rate limit exceeded
          schema:
            type: string
            description: >-
              Possible responses:
                * `Exceeded your account rate limit of searches`
                * `Your account is allowed to run up to ... concurrent queries via the API`
            example: Exceeded your account rate limit of searches
        503:
          description: service unavailable
          schema:
            type: string
            description: >-
              `Our service is temporarily unavailable.`
            example: Our service is temporarily unavailable.

# ::::: TRIGGERS (ALERTS & OPTIMIZERS)
  /triggers/alerts/{id}:
    get:
      operationId: getAlert
      summary: Retrieve alert by ID
      tags:
        - Retrieve alert definitions
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the alert to be retrieved
          x-example: 99999
      responses:
        200:
          description: successful operation
    put:
      operationId: updateAlert
      summary: Update an alert
      tags:
        - Create, update, or delete alert definitions
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/SearchBasedTrigger'
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the alert
      responses:
        200:
          description: successful operation
    delete:
      operationId: deleteAlert
      summary: Delete an alert
      tags:
        - Create, update, or delete alert definitions
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: X-API-TOKEN
          in: header
          description: Authentication Api Token
          required: false
          type: string
        - name: X-AUTH-TOKEN
          in: header
          description: Authentication User Session
          required: false
          type: string
      responses:
        200:
          description: successful operation
  /triggers/alerts:
    get:
      operationId: getAllAlerts
      summary: Retrieve all alerts
      tags:
        - Retrieve alert definitions
      responses:
        200:
          description: successful operation
    post:
      operationId: createAlert
      summary: Create a new alert definition
      tags:
        - Create, update, or delete alert definitions
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/SearchBasedTrigger'
      responses:
        200:
          description: successful operation
  /triggers/alerts/filtered-list:
    post:
      summary: Retrieve filtered list of alerts
      description: ''
      operationId: getFilteredAlerts
      tags:
        - Retrieve alert definitions
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/FilteredAlertsRequest'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PageResponseSearchBasedTrigger'
  /triggers/{id}:
    get:
      operationId: getTrigger
      summary: Retrieve optimizer by ID
      tags:
        - Retrieve optimizer definitions
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SearchBasedTrigger'
          headers: {}
    put:
      operationId: updateTrigger
      summary: Update an optimizer
      tags:
        - Create, update, or delete optimizer definitions
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/SearchBasedTrigger'
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SearchBasedTrigger'
          headers: {}
    delete:
      operationId: deleteTrigger
      summary: Delete an optimizer
      tags:
        - Create, update, or delete optimizer definitions
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SearchBasedTrigger'
          headers: {}
  /triggers:
    get:
      operationId: getAllTriggers
      summary: Retrieve all optimizers
      tags:
        - Retrieve optimizer definitions
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/SearchBasedTrigger'
          headers: {}
    post:
      operationId: createTrigger
      summary: Create a new optimizer
      tags:
        - Create, update, or delete optimizer definitions
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/SearchBasedTrigger'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SearchBasedTrigger'
          headers: {}
  /triggers/filtered-list:
    post:
      operationId: getFilteredTriggersList
      summary: Retrieve a filtered list of optimizers
      tags:
        - Retrieve optimizer definitions
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/FilteredTriggersRequest'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PageResponseSearchBasedTrigger'
          headers: {}


definitions:
# ::::: ACCOUNTS DEFINITIONS
  AccountUtilizationSettings:
    type: object
    description: Account settings for writing utilization metrics
    properties:
      frequencyMinutes:
        type: integer
        format: int32
        description: How often utilization metrics are written to logs, in minutes
      utilizationEnabled:
        type: boolean
        description: If utilization metrics are written to logs, `true`. Otherwise, `false`.
    example:
      frequencyMinutes: 5
      utilizationEnabled: true
  AccountView:
    type: object
    properties:
      accountId:
        type: integer
        format: int32
      accountName:
        type: string
      accountToken:
        type: string
      active:
        type: boolean
      esIndexPrefix:
        type: string
      maxDailyGB:
        type: number
        format: float
      retentionDays:
        type: integer
        format: int32
        description: Data retention time, in days
  DailyUsagesList:
    type: object
    properties:
      usage:
        type: array
        items:
          $ref: '#/definitions/LHDailyCount'
  DetailedTimeBasedAccount:
    type: object
    properties:
      subAccountRelation:
        $ref: '#/definitions/SubAccountRelation'
      account:
        $ref: '#/definitions/AccountView'
      sharingObjectsAccounts:
        type: array
        items:
          $ref: '#/definitions/AccountView'
      utilizationSettings:
        $ref: '#/definitions/AccountUtilizationSettings'
      dailyUsagesList:
        $ref: '#/definitions/DailyUsagesList'
      docSizeSetting:
        $ref: '#/definitions/DocSizeSetting'
  LHDailyCount:
    type: object
    properties:
      date:
        type: integer
        format: int64
      bytes:
        type: integer
        format: int64
  SharingAccount:
    type: object
    properties:
      accountId:
        type: integer
        format: int32
        description: ID of the account
        example: 88888
      accountName:
        type: string
        description: Name of the account
        example: dev group 8
  SubAccountRelation:
    type: object
    description: List of sub accounts
    properties:
      ownerAccountId:
        type: integer
        format: int32
        description: ID of the owner account
        example: 88765
      subAccountId:
        type: integer
        format: int32
        description: ID of the sub account
        example: 89234
      searchable:
        $ref: "#/definitions/Searchable"
      accessible:
        $ref: "#/definitions/Accessible"
      createdDate:
        type: string
        format: date-time
        description: >-
          Date this account was created.
          Format: `{yyyy}-{mm}-{dd}T{hh}:{mm}:{ss}Z`
        example: 2018-02-22T09:14:53Z
      lastUpdatedDate:
        type: string
        format: date-time
        description: >-
          Date this account was last updated.
          Format: `{yyyy}-{mm}-{dd}T{hh}:{mm}:{ss}Z`
        example: 2018-04-01T19:18:38Z
      lastUpdaterUserId:
        type: integer
        format: int32
        description: ID of the user who last updated this account
        example: 33342
      type:
        type: string
        enum:
          - OWNER_ACCOUNT
          - SUB_ACCOUNT
          - TIMELESS_INDEX
          - ALL
        description: Account type
        example: SUB_ACCOUNT
  TimeBasedAccount:
    type: object
    properties:
      accountId:
        type: integer
        format: int32
        description: ID of the account
        example: 99999
      email:
        type: string
        description: Email address of the user who created the account
      accountName:
        type: string
        description: Name of the account
        example: 404 errors
      accountToken:
        type: string
        description: Account token (unique to this account)
        example: f483abe93b
      maxDailyGB:
        type: number
        format: float
        description: Maximum daily usage, in GB
        example: 100
      retentionDays:
        type: integer
        format: int32
        description: Data retention time, in days
        example: 5
      searchable:
        $ref: "#/definitions/Searchable"
      accessible:
        $ref: "#/definitions/Accessible"
      docSizeSetting:
        $ref: '#/definitions/DocSizeSetting'
      sharingObjectsAccounts:
        type: array
        items:
          $ref: '#/definitions/SharingAccount'
        description: Accounts that can access this account's data
      utilizationSettings:
        $ref: '#/definitions/AccountUtilizationSettings'
  TimeBasedAccountCreationResponse:
    type: object
    properties:
      accountId:
        type: integer
        format: int32
        description: ID of the account
      accountToken:
        type: string
        description: Account token (unique to this account)
  TimeBasedAccountUpsertRequest:
    type: object
    required:
      - sharingObjectsAccounts
    properties:
      email:
        type: string
        pattern: "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$"
        description: Account administrator's email address
        example: support@logz.io
      accountName:
        type: string
        description: Name of the account
        example: AWS Lambda svr 3
      maxDailyGB:
        type: number
        format: float
        description: Maximum daily usage, in GB
        example: 5
      retentionDays:
        type: integer
        format: int32
        description: Data retention time, in days
        example: 5
      searchable:
        $ref: "#/definitions/Searchable"
      accessible:
        $ref: "#/definitions/Accessible"
      sharingObjectsAccounts:
        type: array
        items:
          $ref: '#/definitions/SharingAccount'
        description: Accounts that can access this account's data
      docSizeSetting:
        $ref: '#/definitions/DocSizeSetting'
      utilizationSettings:
        $ref: '#/definitions/AccountUtilizationSettings'
  Searchable:
    type: boolean
    description: If other accounts can search this account's logs, `true`. Otherwise, `false`.
    example: true
  Accessible:
    type: boolean
    description: If users of the main account can access this account, `true`. Otherwise, `false`.
    example: false
  DocSizeSetting:
    type: boolean
    description: If document size is attached to logs, `true`. Otherwise, `false`.
    example: true

# ::::: ALERTS DEFINITIONS
  # AlertResponse:
  #   type: object
  #   properties:
  #     alertId:
  #       type: integer
  #       format: int32
  #       example: 88888
  #     lastUpdated:
  #       type: string
  #       format: date-time
  #       example: 2017-07-16'T'12:22:28.301'Z'
  #     lastUpdatedBy:
  #       type: string
  #       example: myuser@my.organization.com
  #     title:
  #       type: string
  #       example: Error level logs
  #     description:
  #       type: string
  #       example: Capture ERROR level logs in the given time range
  #     query_string:
  #       type: string
  #       example: loglevel:ERROR
  #     filter:
  #       type: string
  #       example: {\"bool\":{\"must\":[{\"match\":{\"type\":\"mytype\"}}],\"must_not\":[]}}
  #     operation:
  #       type: string
  #       enum:
  #         - LESS_THAN
  #         - GREATER_THAN
  #         - LESS_THAN_OR_EQUALS
  #         - GREATER_THAN_OR_EQUALS
  #         - EQUALS
  #         - NOT_EQUALS
  #       example: GREATER_THAN
  #     searchTimeFrameMinutes:
  #       type: integer
  #       format: int32
  #       example: 5
  #     notificationEmails:
  #       type: array
  #       items:
  #         type: string
  #       example: [ "me@myorganization.com", "us@myorganization.com", "them@myorganization.com" ]
  #     isEnabled:
  #       type: boolean
  #       example: true
  #     suppressNotificationsMinutes:
  #       type: integer
  #       format: int32
  #       example: 0
  #     valueAggregationType:
  #       type: string
  #       enum:
  #         - SUM
  #         - MIN
  #         - MAX
  #         - AVG
  #         - COUNT
  #         - NONE
  #       example: NONE
  #     valueAggregationField:
  #       type: string
  #       example: null
  #     groupByAggregationFields:
  #       type: array
  #       items:
  #         type: string
  #       example: null
  #     alertNotificationEndpoints:
  #       type: array
  #       items:
  #         type: integer
  #         format: int32
  #       example: [ 0 ]
  #     severityThresholdTiers:
  #       type: array
  #       items:
  #         $ref: '#/definitions/SeverityThresholdTier'
  # AlertRequest:
  #   type: object
  #   required:
  #     - notificationEmails
  #     - query_string
  #     - severity
  #     - title
  #   properties:
  #     title:
  #       type: string
  #       description: Title for the new alert
  #       example: Error level logs
  #     description:
  #       type: string
  #       description: Complete description of the alert
  #       example: Capture ERROR level logs in the given time range
  #     query_string:
  #       type: string
  #       description: Elasticsearch query
  #       example: loglevel:ERROR
  #     filter:
  #       type: string
  #       description: Filter to be performed on `query_string`
  #       example: {"bool":{"must":[{"match":{"type":"mytype"}}],"must_not":[]}}
  #     operation:
  #       type: string
  #       enum:
  #         - LESS_THAN
  #         - GREATER_THAN
  #         - LESS_THAN_OR_EQUALS
  #         - GREATER_THAN_OR_EQUALS
  #         - EQUALS
  #         - NOT_EQUALS
  #       description: With `searchTimeFrameMinutes` and `valueAggregationType`, sets the conditions for triggering this alert.
  #       example: GREATER_THAN
  #     searchTimeFrameMinutes:
  #       type: integer
  #       format: int32
  #       description: Evaluated time frame, in minutes. Used in combination with `operation` and `valueAggregationType`.
  #       example: 5
  #     notificationEmails:
  #       type: array
  #       items:
  #         type: string
  #       description: Array of email addresses to receive notifications
  #       example: [ "you@yourcompany.com", "them@yourcompany.com" ]
  #     isEnabled:
  #       type: boolean
  #       default: true
  #     suppressNotificationsMinutes:
  #       type: integer
  #       format: int32
  #       minimum: 5
  #       description: |
  #         If this alert has been triggered: The amount of time, in minutes, until a notification will be sent to alert endpoints.
  #
  #         **Note:** This setting only affects notifications. If alert conditions are met, alerts will continue to be triggered and logged during the suppression period.
  #       example: 10
  #     valueAggregationType:
  #       type: string
  #       enum:
  #         - SUM
  #         - MIN
  #         - MAX
  #         - AVG
  #         - COUNT
  #         - NONE
  #     valueAggregationField:
  #       type: string
  #     groupByAggregationFields:
  #       type: array
  #       items:
  #         type: string
  #       maxItems: 3
  #       minItems: 0
  #     alertNotificationEndpoints:
  #       type: array
  #       items:
  #         type: integer
  #         format: int32
  #     severityThresholdTiers:
  #       type: array
  #       items:
  #         $ref: '#/definitions/SeverityThresholdTier'
  #       description: Sets threshold values for high, medium, and low severity alerts.
  # NotificationEndpointResponse:
  #   type: object
  #   properties:
  #     id:
  #       type: integer
  #       format: int32
  #     type:
  #       type: string
  #     description:
  #       type: string
  #     title:
  #       type: string
  #     createdDate:
  #       type: string
  #       format: date-time
  #     modifiedDate:
  #       type: string
  #       format: date-time
  # SeverityThresholdTier:
  #   type: object
  #   properties:
  #     severity:
  #       type: string
  #       enum:
  #         - LOW
  #         - MEDIUM
  #         - HIGH
  #       description: Severity level
  #       example: HIGH
  #     threshold:
  #       type: number
  #       format: double
  #       description: Threshold for this severity
  #       example: 2.0
  # TriggeredAlertsRequest:
  #   type: object
  #   properties:
  #     from:
  #       type: integer
  #       format: int32
  #       minimum: 0
  #       description: First record to be returned. First record is `0`.
  #       example: 5
  #     search:
  #       type: string
  #       description: Partial or complete alert name to filter by. Not case-sensitive.
  #       example:
  #     severity:
  #       type: array
  #       items:
  #         type: string
  #         enum:
  #           - LOW
  #           - MEDIUM
  #           - HIGH
  #       description: Severity of the triggered alerts, evaluated using 'or' logic. For example, `[ "MEDIUM", "LOW" ]` returns triggered alerts with medium and low severity.
  #       example: [ "MEDIUM", "LOW" ]
  #     size:
  #       type: integer
  #       format: int32
  #       minimum: 1
  #       description: Size of page to return, in number of records ??confirm this is true
  #       example: 8
  #     sortBy:
  #       type: string
  #       enum:
  #         - DATE
  #         - SEVERITY
  #       description: Sort this list by `DATE` or `SEVERITY`. Used in combination with `sortOrder`.
  #       example: SEVERITY
  #     sortOrder:
  #       type: string
  #       enum:
  #         - ASC
  #         - DESC
  #       description: |
  #         Used in combination with `sortBy`.
  #
  #         If sorting by `DATE`, use `ASC` to sort from earliest to latest. Otherwise, use `DESC`.
  #
  #         If sorting by `SEVERITY`, use `ASC` to sort from low to high. Otherwise, use `DESC`.
  #       example: ASC
  # PageResponseTriggeredAlert:
  #   type: object
  #   properties:
  #     from:
  #       type: integer
  #       format: int32
  #       minimum: 0
  #       maximum: 2147483647
  #     pageSize:
  #       type: integer
  #       format: int32
  #       minimum: 0
  #       maximum: 500
  #     results:
  #       type: array
  #       items:
  #         $ref: '#/definitions/TriggeredAlert'
  #     total:
  #       type: integer
  #       format: int64
  #       minimum: 0
  #       maximum: 500
  # TriggeredAlert:
  #   type: object
  #   properties:
  #     alertId:
  #       type: integer
  #       format: int32
  #     eventDate:
  #       type: integer
  #       format: int64
  #     name:
  #       type: string
  #     severity:
  #       type: string
  #       enum:
  #         - LOW
  #         - MEDIUM
  #         - HIGH

# ::::: TRIGGERS DEFINITIONS
  SearchBasedTrigger:
    type: object
    required:
      - output
      - search
      - triggerOn
    properties:
      id:
        type: integer
        format: int32
        description: ID of the alert
      name:
        type: string
        description: Name of the alert
      description:
        type: string
        description: Detailed description of the alert
      enabled:
        type: boolean
        description: If this alert is enabled, `true`. Otherwise, `false`.
      search:
        $ref: '#/definitions/TriggerSearchParameters'
      triggerOn:
        $ref: '#/definitions/TriggerOn'
      output:
        $ref: '#/definitions/TriggerOutput'
      lastUpdatedOn:
        type: integer
        format: int64
      lastUpdateBy:
        type: string
      createdOn:
        type: integer
        format: int64
      createdBy:
        type: string
  TriggerSearchParameters:
    type: object
    required:
      - queryString
    properties:
      queryString:
        type: string
        description: Elasticsearch query used by the alert
        example: loglevel:ERROR
      filter:
        type: string
        description: Filter to be performed on `queryString`
        example: {"bool":{"must":[{"match":{"type":"mytype"}}],"must_not":[]}}
      groupBy:
        type: array
        items:
          type: string
        maxItems: 3
        minItems: 0
      periodInMinutes:
        type: integer
        format: int32
      source:
        $ref: '#/definitions/TriggerSearchSources'
      metricsAggregations:
        type: array
        items:
          $ref: '#/definitions/Aggregation'
  TriggerSearchSources:
    type: object
    properties:
      allTimelessIndices:
        type: boolean
      timelessIndices:
        type: array
        items:
          type: integer
          format: int32
      allSubAccounts:
        type: boolean
      subAccountsIds:
        type: array
        items:
          type: integer
          format: int32
  Aggregation:
    type: object
    properties:
      aggregationType:
        type: string
        enum:
          - SUM
          - MIN
          - MAX
          - AVG
          - COUNT
          - UNIQUE_COUNT
          - NONE
      fieldToAggregateOn:
        type: string
  TriggerOn:
    type: object
    discriminator: type
    properties:
      type:
        type: string
        enum:
          - CONDITION
          - SCHEDULE
  TriggerOutput:
    type: object
    required:
      - format
      - target
    properties:
      format:
        $ref: '#/definitions/Format'
      target:
        $ref: '#/definitions/Target'
  Format:
    type: object
    discriminator: type
  Target:
    type: object
    properties:
      emailNotifications:
        type: string
      notificationEndpoints:
        type: array
        items:
          $ref: '#/definitions/NotificationEndpoint'
      suppressNotificationInMinutes:
        type: integer
        format: int32
        minimum: 5
      timelessIndex:
        $ref: '#/definitions/TimelessIndexTarget'
  NotificationEndpoint:
    type: object
    properties:
      id:
        type: integer
        format: int32
      accountId:
        type: integer
        format: int32
      type:
        type: string
        enum:
          - HTTP
      templateName:
        type: string
      description:
        type: string
      title:
        type: string
      createdDate:
        type: string
        format: date-time
      modifiedDate:
        type: string
        format: date-time
      params:
        $ref: '#/definitions/NotificationEndpointParams'
  NotificationEndpointParams:
    type: object
  TimelessIndexTarget:
    type: object
    properties:
      id:
        type: integer
        format: int32
      logType:
        type: string
  FilteredAlertsRequest:
    type: object
    properties:
      from:
        type: integer
        format: int32
        minimum: 0
      size:
        type: integer
        format: int32
        minimum: 1
      search:
        type: string
      severities:
        type: array
        items:
          type: string
          enum:
            - LOW
            - MEDIUM
            - HIGH
      updatedBy:
        type: array
        items:
          type: string
      createdBy:
        type: array
        items:
          type: string
      activeState:
        type: array
        items:
          type: string
          enum:
            - Active
            - Dismissed
      emailNotifications:
        type: array
        items:
          type: string
      notificationsEndpointIds:
        type: array
        items:
          type: integer
          format: int32
      lastTriggered:
        $ref: '#/definitions/LastTriggeredFilter'
      sortBy:
        type: string
        enum:
          - name
          - severity
          - createdAt
          - updatedAt
      sortOrder:
        type: string
        enum:
          - ASC
          - DESC
  LastTriggeredFilter:
    type: object
    required:
      - fromDate
      - toDate
    properties:
      fromDate:
        type: integer
        format: int64
      toDate:
        type: integer
        format: int64
  PageResponseSearchBasedTrigger:
    type: object
    properties:
      pageSize:
        type: integer
        format: int32
        minimum: 0
        maximum: 500
      from:
        type: integer
        format: int32
        minimum: 0
        maximum: 2147483647
      total:
        type: integer
        format: int64
        minimum: 0
        maximum: 500
      results:
        type: array
        items:
          $ref: '#/definitions/SearchBasedTrigger'
  TriggerContributingUser:
    type: object
    properties:
      username:
        type: string
        readOnly: true
      fullName:
        type: string
        readOnly: true
      isToken:
        type: boolean
      token:
        type: boolean
  FilteredTriggersRequest:
    type: object
    properties:
      from:
        type: integer
        format: int32
        minimum: 0
      size:
        type: integer
        format: int32
        minimum: 1
      search:
        type: string
      updatedBy:
        type: array
        items:
          type: string
      createdBy:
        type: array
        items:
          type: string
      activeState:
        type: array
        items:
          type: string
          enum:
            - Active
            - Dismissed
      sortBy:
        type: string
      sortOrder:
        type: string
        enum:
          - ASC
          - DESC
