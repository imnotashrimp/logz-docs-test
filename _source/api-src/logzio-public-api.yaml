swagger: '2.0'
schemes: [ https ]
host: api.logz.io
basePath: /v1
produces: [ application/json ]
consumes: [ application/json ]
info:
  description: |
    # Introduction

    This API is documented using the **OpenAPI 2.0** specification. You can browse the API documentation on this page, or you can download the specification file.

    ### Updates and improvements

    We update this document regularly to reflect changes to the Logz.io API. If you'd like to suggest corrections or improvements to this document, please email us at [help@logz.io](mailto:help@logz.io) or submit a ticket in the GitHub repository.

    # Authentication and rate limiting

    <!-- ReDoc-Inject: <security-definitions> -->

    The Logz.io API is available to Enterprise plan subscribers. You can create a new API token in your [account settings](https://app.logz.io/#/dashboard/settings/manage-accounts_). You can also set and revoke API permissions at any time.

    If you don't have an Enterprise account, we encourage you to sign up for a [free trial](https://logz.io/signup/freetrial.php).


  version: 1.0.0
  title: Logzio API
  termsOfService: 'https://logz.io/about-us/terms-of-use/'
  contact:
    email: help@logz.io
    url: https://logz.io/
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

securityDefinitions:
  API token:
    description: This is used in most of our endpoints. If no other security methods are used, this one wins.
    type: apiKey
    in: header
    name: X-API-TOKEN
security:
  - API token: []

tags:
  # ::::: ACCOUNTS TAGS
  - name: Retrieve sub accounts
  - name: Create, update, or delete sub accounts

  # ::::: TRIGGERS - ALERTS TAGS
  - name: Retrieve alert definitions
  # - name: Retrieve triggered alerts
  - name: Create, update, or delete alert definitions

  # ::::: TRIGGERS - OPTIMIZER TAGS
  - name: Retrieve optimizer definitions
  - name: Create, update, or delete optimizer definitions

  # ::::: SEARCH, SCROLL TAGS
  - name: Search logs

  # ::::: AUDIT TRAIL TAGS
  - name: Retrieve audit trail

  # ::::: CLOUDTRAIL TAGS
  - name: Retrieve account CloudTrails
  - name: Create, update, or delete CloudTrails

  # ::::: NOTIFICATION ENDPOINT TAGS
  - name: Retrieve endpoints
  - name: Create endpoints
  - name: Update endpoints
  - name: Delete endpoints

  # ::::: KIBANA IMPORT/EXPORT TAGS
  - name: Import or export objects

  # ::::: SHARED TOKEN TAGS
  - name: Retrieve shared tokens
  - name: Create, update, or delete shared tokens
  - name: Retrieve token filters
  - name: Create, update, or delete token filters

  # ::::: SNAPSHOTS TAGS
  - name: Retrieve snapshots
  - name: Create snapshots

  # ::::: USER MANAGEMENT TAGS
  - name: Retrieve users
  - name: Create, update, or delete users

x-tagGroups:
  - name: Accounts
    tags:
      - Retrieve sub accounts
      - Create, update, or delete sub accounts
  - name: Alerts
    tags:
      - Retrieve alert definitions
      - Create, update, or delete alert definitions
  - name: Audit trail
    tags:
      - Retrieve audit trail
  - name: CloudTrail
    tags:
      - Retrieve account CloudTrails
      - Create, update, or delete CloudTrails
  - name: Kibana
    tags:
      - Import or export objects
  - name: Notification endpoints
    tags:
      - Retrieve endpoints
      - Create endpoints
      - Update endpoints
      - Delete endpoints
  - name: Optimizers
    tags:
      - Retrieve optimizer definitions
      - Create, update, or delete optimizer definitions
  - name: Search and scroll logs
    tags:
      - Search logs
  - name: Shared tokens and filters
    tags:
      - Retrieve shared tokens
      - Retrieve token filters
      - Create, update, or delete shared tokens
      - Create, update, or delete token filters
  - name: Snapshotter
    tags:
      - Retrieve snapshots
      - Create snapshots
  - name: Users
    tags:
      - Retrieve users
      - Create, update, or delete users
#
paths:
  # ::::: ACCOUNTS
  /account-management/time-based-accounts:
    get:
      summary: Retrieve all sub accounts
      description: Returns a list of sub accounts as an array of JSON objects.
      tags:
        - Retrieve sub accounts
      operationId: getAll
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/TimeBasedAccount'
      x-code-samples:
      - lang: cURL
        source: 'curl --request GET --url "https://api.logz.io/v1/account-management/time-based-accounts" --header "X-API-TOKEN: <API token>"'
    post:
      summary: Create a sub account
      description: Creates a new time-based sub account.
      tags:
        - Create, update, or delete sub accounts
      operationId: createTimeBasedAccount
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/TimeBasedAccountUpsertRequest'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/TimeBasedAccountCreationResponse'
      x-code-samples:
      - lang: cURL
        source: >-
          curl -X POST \
            "https://api.logz.io/v1/account-management/time-based-accounts" \
            -H "accept: application/json" -H "content-type: application/json" \
            -H "X-API-TOKEN: <API token>" \
            -d '{
            "email": "help@logz.io",
            "accountName": "AWS Lambda svr 3",
            "maxDailyGB": 5,
            "retentionDays": 5,
            "searchable": true,
            "accessible": false,
            "sharingObjectsAccounts": [
              48672,
              36259
            ],
            "docSizeSetting": true,
            "utilizationSettings": {
              "frequencyMinutes": 5,
              "utilizationEnabled": true
            }
            }'
  /account-management/time-based-accounts/detailed:
    get:
      summary: Retrieve detailed information on all sub accounts
      description: This endpoint retrieves all time-based sub accounts, returned as an array of objects. Each sub account is its own object.
      tags:
        - Retrieve sub accounts
      operationId: getAllDetailedTimeBasedAccount
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DetailedTimeBasedAccount'
      x-code-samples:
      - lang: cURL
        source: 'curl -X GET "https://api.logz.io/v1/account-management/time-based-accounts/detailed" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <API token>"'
  /account-management/time-based-accounts/detailed/{id}:
    get:
      summary: Retrieve detailed account information by ID
      description: This endpoint takes an account ID as the only path parameter and returns detailed account information.
      tags:
        - Retrieve sub accounts
      operationId: getDetailedTimeBasedAccount
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the account to be retrieved
          x-example: 99999
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DetailedTimeBasedAccount'
      x-code-samples:
      - lang: cURL
        source: 'curl -X GET "https://api.logz.io/v1/account-management/time-based-accounts/detailed/99999" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <API token>"'
  /account-management/time-based-accounts/{id}:
    get:
      summary: Retrieve sub account by ID
      description: Returns account information and configuration as a JSON object.
      tags:
        - Retrieve sub accounts
      operationId: get
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the account to be retrieved
          x-example: 99999
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/TimeBasedAccount'
      x-code-samples:
      - lang: cURL
        source: 'curl -X GET "https://api.logz.io/v1/account-management/time-based-accounts/99999" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <API token>"'
    put:
      summary: Update a sub account
      tags:
        - Create, update, or delete sub accounts
      operationId: updateTimeBasedAccount
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the account to be updated
          x-example: 99999
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/TimeBasedAccountUpsertRequest'
      responses:
        204:
          description: successful operation
      x-code-samples:
      - lang: cURL
        source: >-
          curl -X PUT \
          "https://api.logz.io/v1/account-management/time-based-accounts/88888" \
          -H "accept: application/json" -H "content-type: application/json" \
          -H "X-API-TOKEN: <API token>" \
          -d '{
            "email": "help@logz.io",
            "accountName": "AWS Lambda svr 3",
            "maxDailyGB": 5,
            "retentionDays": 5,
            "searchable": true,
            "accessible": false,
            "sharingObjectsAccounts": [
                55555
            ],
            "docSizeSetting": true,
            "utilizationSettings": {
              "frequencyMinutes": 5,
              "utilizationEnabled": true
            }
          }'
    delete:
      summary: Delete a sub account
      description: Using an account ID as the only parameter, this endpoint deletes a sub account.
      tags:
        - Create, update, or delete sub accounts
      operationId: deleteTimeBasedAccount
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the account to be deleted.
          x-example: 99999
      responses:
        204:
          description: successful operation
      x-code-samples:
        - lang: cURL
          source: 'curl -X DELETE "https://api.logz.io/v1/account-management/time-based-accounts/88888" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <API token>"'

  # ::::: SEARCH, SCROLL
  /search:
    post:
      summary: Run an Elasticsearch query
      description: >-
        Use the `/search` endpoint to query your account data using the Elasticsearch Search API DSL query language. To ensure system performance, we've restricted some options from the Elasticsearch defaults.

        * We support these top-level elements in the Elasticsearch Search API: `query`, `from`, `size`, `sort`, `_source`, `post_filter`, `aggs`, `aggregations`

        * When using the `query_string` element, the `allow_leading_wildcard` field can't be set to `true`

        * The `wildcard` element can't start with `*` or `?`

        * Your query will run only on data sent today and yesterday. You can still specify a filter on `timestamp` to search a smaller time frame

        * When using the `size` element for aggregations, the value must be ≤ `1000`

        * Can't nest 2 or more bucket aggregations of these types: `date_histogram`, `geohash_grid`, `histogram`, `ip_ranges`, `significant_terms`, `terms`

        * Can't sort or aggregate on the `message` field

        * Aggregation type `significant_terms` can't be used

        * `query` can't contain the `fuzzy_max_expansions`, `max_expansions`, or `max_determinized_states`

      tags:
        - Search logs
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - query
            properties:
              from:
                type: number
                default: 0
                description: ??description
              size:
                type: number
                description: Number of results to return
                default: 10
              sort:
                type: array
                description: Array that allows sorting by specific fields. Each array item contains a field name and sort parameters. See [Elasticsearch Sort](https://www.elastic.co/guide/en/elasticsearch/reference/5.5/search-request-sort.html) for more information.
                items:
                  type: object
              _source:
                type: array
                description: >-
                  * _Option 1:_ A single item to say whether you want to return the `_source` field.

                  * _Option 2:_ An array of fields to return.
                items:
                  - type: boolean
                    description: To return the `_source` field, `true`. Otherwise, `false`.
                    example: true
                  - type: string
                    description: Fields to return.
              post_filter:
                type: object
              # aggs:
              # aggregations:
      responses:
        200:
          description: successful query
          schema:
            type: object
            example: { "hits": { "total": 339604, "max_score": 0, "hits": [] }, "aggregations": { "byType": { "doc_count_error_upper_bound": 0, "sum_other_doc_count": 44879, "buckets": [ { "key": "web-app", "doc_count": 163690 }, { "key": "core-service", "doc_count": 64893 } ] } } }
        400:
          description: invalid query
          schema:
            type: string
            description: >-
              Possible responses:
                * `Found JSON elements which are not allowed ...`
                * `... query_string.allow_leading_wildcard not allowed to be true`
                * `... 'wildcard' queries are not allowed to start with '*' or '?'`
                * `... contains a wildcard search with leading wildcard which is not allowed ...`
                * `Query has failed. Elasticsearch Response: ...`
                * `Query syntax (in 'query' field) is invalid: ...`
                * `This search can't be executed: ... Please contact customer support for more details`
            example: Found JSON elements which are not allowed ...
        403:
          description: access forbidden
          schema:
            type: string
            description: >-
              `Your account is not allowed to use Search API. Please contact support/sales to enable this feature for you`
            example: Your account is not allowed to use Search API. Please contact support/sales to enable this feature for you
        429:
          description: rate limit exceeded
          schema:
            type: string
            description: >-
              Possible responses:
                * `Exceeded your account rate limit of searches`
                * `Your account is allowed to run up to ... concurrent queries via the API`
            example: Exceeded your account rate limit of searches
        503:
          description: service unavailable
          schema:
            type: string
            description: >-
              `Our service is temporarily unavailable.`
            example: Our service is temporarily unavailable.
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/search" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <API token>" -d "{ \"size\": 0, \"query\": { \"bool\": { \"must\": [ { \"range\": { \"@timestamp\": { \"gte\": \"now-5m\", \"lte\": \"now\" } } }] } }, \"aggs\": { \"byType\": { \"terms\": { \"field\": \"type\", \"size\": 5 } } } }"'
  /scroll:
    post:
      summary: Run a paginated Elasticsearch query
      tags:
        - Search logs
      description: ''
      operationId: scroll
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/ScrollRequest'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ScrollResponse'

  # ::::: TRIGGERS (ALERTS & OPTIMIZERS)
  /triggers/alerts/{id}:
    get:
      operationId: getAlert
      summary: Retrieve alert by ID
      tags:
        - Retrieve alert definitions
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the alert to be retrieved
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SearchBasedTrigger'
    put:
      operationId: updateAlert
      summary: Update an alert
      tags:
        - Create, update, or delete alert definitions
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/SearchBasedTrigger'
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the alert
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SearchBasedTrigger'
    delete:
      operationId: deleteAlert
      summary: Delete an alert
      tags:
        - Create, update, or delete alert definitions
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: successful operation
  /triggers/alerts:
    get:
      operationId: getAllAlerts
      summary: Retrieve all alert definitions
      description: Use this endpoint to see all alert definitions in an account. This endpoint returns an array of JSON objects, with each object showing all the available details for an alert definition.
      tags:
        - Retrieve alert definitions
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/SearchBasedTrigger'
    post:
      operationId: createAlert
      summary: Create a new alert definition
      tags:
        - Create, update, or delete alert definitions
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/SearchBasedTrigger'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SearchBasedTrigger'
  /triggers/alerts/filtered-list:
    post:
      summary: Retrieve filtered list of alerts
      description: ''
      operationId: getFilteredAlerts
      tags:
        - Retrieve alert definitions
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/FilteredAlertsRequest'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/PageResponseSearchBasedTrigger'
  /triggers/{id}:
    get:
      operationId: getTrigger
      summary: Retrieve optimizer by ID
      tags:
        - Retrieve optimizer definitions
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SearchBasedTrigger'
    put:
      operationId: updateTrigger
      summary: Update an optimizer
      tags:
        - Create, update, or delete optimizer definitions
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/SearchBasedTrigger'
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SearchBasedTrigger'
    delete:
      operationId: deleteTrigger
      summary: Delete an optimizer
      tags:
        - Create, update, or delete optimizer definitions
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SearchBasedTrigger'
  /triggers:
    get:
      operationId: getAllTriggers
      summary: Retrieve all optimizers
      tags:
        - Retrieve optimizer definitions
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/SearchBasedTrigger'
    post:
      operationId: createTrigger
      summary: Create a new optimizer
      tags:
        - Create, update, or delete optimizer definitions
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/SearchBasedTrigger'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SearchBasedTrigger'
  /triggers/filtered-list:
    post:
      operationId: getFilteredTriggersList
      summary: Retrieve a filtered list of optimizers
      tags:
        - Retrieve optimizer definitions
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/FilteredTriggersRequest'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/PageResponseSearchBasedTrigger'

  # ::::: AUDIT TRAIL
  /audit-trail/event-types:
    post:
      operationId: listAccountAuditTrails
      summary: Retrieve event types in the audit trail
      description: Returns an array of strings. Each string is an event type that appears in the account's audit trail. Each event type is shown once, no matter how many times it occurs in the acconut's audit trail.
      tags:
        - Retrieve audit trail
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/AuditTrailEventTypesResponse'
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/audit-trail/event-types" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <API token>"'
  /audit-trail:
    post:
      operationId: listAccountAuditTrails
      summary: Retrieve a filtered list of audit trail events
      tags:
        - Retrieve audit trail
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/AuditTrailFilterRequest'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/AuditTrailFilteredResponse'

  # ::::: CLOUDTRAIL
  /log-shipping/cloudtrails:
    get:
      operationId: getAccountCloudTrails
      summary: Retrieve all CloudTrails in a S3 bucket
      description: >-
        ??


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Retrieve account CloudTrails
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/CloudTrailResponse'
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/log-shipping/cloudtrails" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <API token>"'
    post:
      operationId: createCloudTrail
      summary: Create a CloudTrail
      description: >-
        ??


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Create, update, or delete CloudTrails
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/CloudTrailRequest'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/IdBean'
      x-code-samples:
        - lang: cURL
          source: >-
            curl -X POST "https://api.logz.io/v1/log-shipping/cloudtrails" \
            -d "{
              \"accessKey\": \"ee07df5801500745419c6dff\",
              \"secretKey\": \"506d891fe2163a511b450eddc3279539f6\",
              \"bucket\": \"LogzioBucket\",
              \"prefix\": \"AWSLogs/7364988021587/myprefix\",
              \"active\": true
            }"
  /log-shipping/cloudtrails/{id}:
    get:
      operationId: getCloudTrail
      summary: Retrieve a CloudTrail by ID
      description: >-
        ??

        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Retrieve account CloudTrails
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ??
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/CloudTrailResponse'
    put:
      operationId: updateCloudTrail
      summary: Update CloudTrail
      description: >-
        ??


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Create, update, or delete CloudTrails
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/CloudTrailRequest'
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/MessageBean'
    delete:
      operationId: deleteCloudTrail
      summary: Delete a CloudTrail
      description: >-
        ??


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Create, update, or delete CloudTrails
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: X-API-TOKEN
          in: header
          description: Authentication Api Token
          required: false
          type: string
        - name: X-AUTH-TOKEN
          in: header
          description: Authentication User Session
          required: false
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/MessageBean'

  # ::::: NOTIFICATION ENDPOINTS
  /endpoints/slack:
    post:
      operationId: createSlack
      summary: Create a Slack endpoint
      tags:
        - Create endpoints
      description: Creates a new Slack notification endpoint or sends a test message to Slack
      parameters:
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not created. To create the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/SlackEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/endpoints/slack?test=false" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <API token>" -d \"{  \"title\": \"New Slack endpoint\",  \"description\": \"Sends notifications to #logzio-alerts channel\",  \"url\": \"https://hooks.slack.com/services/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\"}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /endpoints/slack/{id}:
    put:
      tags:
        - Update endpoints
      summary: Update Slack endpoint
      description: Updates a Slack notification endpoint or sends a test message to Slack
      operationId: updateSlack
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the notification endpoint
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not updated. To update the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/SlackEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X PUT "https://api.logz.io/v1/endpoints/slack/269?test=false" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <API token>" -d "{  \"title\": \"Updated Slack endpoint\",  \"description\": \"Sends notifications to #logzio-alerts channel\",  \"url\": \"https://hooks.slack.com/services/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\"}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /endpoints/custom:
    post:
      tags:
        - Create endpoints
      summary: Create a custom notification endpoint
      description: Creates a new notification endpoint for a custom integration or sends a test message to the custom endpoint.
      operationId: createCustom
      parameters:
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not created. To create the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/CustomEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/endpoints/custom" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <API token>" -d "{\"title\": \"New custom endpoint\", \"description\": \"Sends notifications to my custom endpoint\", \"url\": \"https://my.custom-endpoint.com\", \"method\": \"POST\", \"headers\": \"authKey=6e30-60a9-3591\", \"bodyTemplate\": {\"subject\": \"Alert from Logz.io\", \"message\": {\"severity\": \"LOW\", \"body\": \"Check Logz.io for log activity\"} }}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /endpoints/custom/{id}:
    put:
      tags:
        - Update endpoints
      summary: Update a custom notification endpoint
      description: Updates a new notification endpoint for a custom integration or sends a test message to the custom endpoint.
      operationId: updateCustom
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not updated. To update the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/CustomEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X PUT "https://api.logz.io/v1/endpoints/custom/275" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <API token>" -d "{\"title\": \"Updated custom endpoint\", \"description\": \"Sends notifications to my custom endpoint\", \"url\": \"https://my.custom-endpoint.com/\", \"method\": \"POST\", \"headers\": \"authKey=6e30-60a9-3591\", \"bodyTemplate\": {\"subject\": \"Alert from Logz.io\", \"message\": {\"severity\": \"LOW\", \"body\": \"Check Logz.io for log activity\"} }}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /endpoints/pager-duty:
    post:
      tags:
        - Create endpoints
      summary: Create a PagerDuty endpoint
      description: Creates a new PagerDuty notification endpoint or sends a test message to PagerDuty.
      operationId: createPagerDuty
      parameters:
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not created. To create the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/PagerDutyEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/endpoints/pager-duty" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <API token>" -d "{  \"title\": \"New PagerDuty endpoint\",  \"description\": \"Sends notifications to PagerDuty\",  \"serviceKey\": \"78c3b6cf0a884a538410fe281227eb0b\"}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /endpoints/pager-duty/{id}:
    put:
      tags:
        - Update endpoints
      summary: Update a PagerDuty endpoint
      description: Updates a PagerDuty notification endpoint or sends a test message to PagerDuty
      operationId: updatePagerDuty
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the notification endpoint
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not updated. To update the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/PagerDutyEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X PUT "https://api.logz.io/v1/endpoints/pager-duty/271" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <API token>" -d "{  \"title\": \"Updated PagerDuty endpoint\", \"description\": \"Sends notifications to PagerDuty\", \"serviceKey\": \"78c3b6cf0a884a538410fe281227eb0b\"}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /endpoints/big-panda:
    post:
      tags:
        - Create endpoints
      summary: Create a BigPanda endpoint
      description: Creates a new BigPanda notification endpoint or sends a test message to BigPanda.
      operationId: createBigPanda
      parameters:
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not created. To create the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/BigPandaEndpointUpsertRequest'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/endpoints/big-panda" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <API token>" -d "{  \"title\": \"New BigPanda endpoint\",  \"description\": \"Sends notifications to BigPanda\",  \"apiToken\": \"94ad63254a1397a51a1ae340c4f10890\",  \"appKey\": \"c687f9231619d7d7b959f33e4cc821a5\"}"'
  /endpoints/big-panda/{id}:
    put:
      tags:
        - Update endpoints
      summary: Update a BigPanda endpoint
      description: Updates a BigPanda notification endpoint or sends a test message to BigPanda
      operationId: updateBigPanda
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the notification endpoint
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not updated. To update the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/BigPandaEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X PUT "https://api.logz.io/v1/endpoints/big-panda/272" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <API token>" -d "{\"title\": \"Updated BigPanda endpoint\", \"description\": \"Sends notifications to BigPanda\", \"apiToken\": \"94ad63254a1397a51a1ae340c4f10890\", \"appKey\": \"c687f9231619d7d7b959f33e4cc821a5\"}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /endpoints/data-dog:
    post:
      tags:
        - Create endpoints
      summary: Create a Datadog endpoint
      description: Creates a new Datadog notification endpoint or sends a test message to Datadog.
      operationId: createDataDog
      parameters:
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not created. To create the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/DatadogEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/endpoints/data-dog" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <API token>" -d "{  \"title\": \"New Datadog endpoint\",  \"description\": \"Sends notifications to Datadog\",  \"apiKey\": \"c687f9231619d7d7b959f33e4cc821a5\"}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /endpoints/data-dog/{id}:
    put:
      tags:
        - Update endpoints
      summary: Update a Datadog endpoint
      description: Updates a Datadog notification endpoint or sends a test message to Datadog
      operationId: updateDataDog
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the notification endpoint
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not updated. To update the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/DatadogEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X PUT "http://endpoints/data-dog/273" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <API token>" -d "{\"title\": \"Updated Datadog endpoint\", \"description\": \"Sends notifications to Datadog\", \"apiKey\": \"c687f9231619d7d7b959f33e4cc821a5\"}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /endpoints/victorops:
    post:
      tags:
        - Create endpoints
      summary: Create a VictorOps endpoint
      description: Creates a new VictorOps notification endpoint or sends a test message to VictorOps.
      operationId: createVictorops
      parameters:
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not created. To create the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/VictoropsEndpointUpsertRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/endpoints/victorops" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <API token>" -d "{  \"title\": \"New VictorOps endpoint\",  \"description\": \"Sends notifications to VictorOps\",  \"routingKey\": \"devops\",  \"messageType\": \"WARNING\",  \"serviceApiKey\": \"c687f9231619d7d7b959f33e4cc821a5\"}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
  /endpoints/victorops/{id}:
    put:
      tags:
        - Update endpoints
      summary: Update a VictorOps endpoint
      description: Updates a VictorOps notification endpoint or sends a test message to VictorOps
      operationId: updateVictorops
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the notification endpoint
        - name: test
          in: query
          required: false
          type: boolean
          default: false
          description: >-
            To send a test message to the endpoint, `true`. Otherwise, `false`.


            **Note:** If set to `true`, the notification endpoint is not updated. To update the endpoint, you need to send the API request where `test=false`.
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/VictoropsEndpointUpsertRequest'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/EndpointUpsertResponse'
      x-code-samples:
        - lang: cURL
          source: 'curl -X PUT "https://api.logz.io/v1/endpoints/victorops/274" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <API token>" -d "{\"title\": \"New VictorOps endpoint\", \"description\": \"Sends notifications to VictorOps\", \"routingKey\": \"devops\", \"messageType\": \"WARNING\", \"serviceApiKey\": \"c687f9231619d7d7b959f33e4cc821a5\"}"'
  /endpoints/{id}:
    get:
      tags:
        - Retrieve endpoints
      summary: Retrieve an endpoint by ID
      description: Returns a JSON object representing a notification endpoint configured in the account.
      operationId: getEndpointById
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the notification endpoint
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/endpoints/88" -H "accept: application/json" -H "X-API-TOKEN: <API token>"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Endpoint'
    delete:
      tags:
        - Delete endpoints
      summary: Delete an endpoint
      description: Deletes a notification endpoint
      operationId: deleteEndpoint
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the notification endpoint
      x-code-samples:
        - lang: cURL
          source: 'curl -X DELETE "https://api.logz.io/v1/endpoints/269" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <API token>"'
      responses:
        204:
          description: successful operation
  /endpoints:
    get:
      tags:
        - Retrieve endpoints
      summary: Retrieve all notification endpoints
      description: Returns an array of JSON objects. Each object represents a notification endpoint configured in the account.
      operationId: getAllEndpoints
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/endpoints" -H "accept: application/json" -H "X-API-TOKEN: <API token>"'
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Endpoint'

  # ::::: KIBANA IMPORT/EXPORT
  /kibana/export:
    post:
      tags:
        - Import or export objects
      summary: Export Kibana objects
      description: >-
        This endpoint exports the configuration of Kibana objects. All objects of a single type (search, visualization, or dashboard) are returned as an array of JSON objects. For example, if you export `visualization`, each visualization is returned as a JSON object.


        You can import objects using the [/kibana/import](#operation/importSavedObjects) endpoint.
      operationId: exportSavedObjects
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/KibanaExportRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/kibana/export" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <API token>" -d "{\"type\": \"visualization\"}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/KibanaExportResponse'
  /kibana/import:
    post:
      tags:
        - Import or export objects
      summary: Import Kibana objects
      description: Use this endpoint to import Kibana search, visualization, or dashboard objects. You can export objects using the [/kibana/export](#operation/exportSavedObjects) endpoint.
      operationId: importSavedObjects
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/KibanaImportRequest'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/KibanaImportResponse'
      x-code-samples:
        - lang: cURL
          source: >-
            curl -X POST "https://api.logz.io/v1/kibana/import" \
            -H "accept: application/json" -H "content-type: application/json" \
            -H "X-API-TOKEN: <API token>" \
            -d "{
              \"kibanaVersion\": \"4.0.0-beta3\",
              \"override\": true,
              \"hits\": [
                {
                  \"_index\": \"logzioCustomerKibanaIndex\",
                  \"_type\": \"search\",
                  \"_id\": \"c245e530-fc60-11e7-b120-5320b1759c57\",
                  \"_score\": 1,
                  \"_source\": {
                    \"title\": \"example-saved-query\",
                    \"description\": \"\",
                    \"hits\": 0,
                    \"columns\": [
                      \"message\"
                    ],
                    \"sort\": [
                      \"@timestamp\",
                      \"desc\"
                    ],
                    \"version\": 1,
                    \"kibanaSavedObjectMeta\": {
                      \"searchSourceJSON\": \"{\"index\":\"[logzioCustomerIndex]YYMMDD\",\"highlightAll\":true,\"version\":true,\"query\":{\"query_string\":{\"query\":\"example-saved-query\"}},\"filter\":[]}\"
                    },
                    \"_createdBy\": {
                      \"userId\": 1,
                      \"fullName\": \"testadmin@logz.io\",
                      \"username\": \"testadmin@logz.io\"
                    },
                    \"_createdAt\": 1516287816456,
                    \"_updatedBy\": {
                      \"userId\": 1,
                      \"fullName\": \"testadmin@logz.io\",
                      \"username\": \"testadmin@logz.io\"
                    },
                    \"_updatedAt\": 1516287816456
                  }
                }
              ]
            }"


  # ::::: SHARED TOKENS
  /shared-tokens/filters:
    get:
      operationId: getAllFilters
      summary: Retrieve all token filters
      description: >-
        Returns an array of JSON objects, where each object shows information for one token filter.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Retrieve token filters
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/shared-tokens/filters" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <API token>"'
      responses:
        200:
          description: successful operation
          schema:
            type: array
            uniqueItems: true
            items:
              $ref: '#/definitions/QueryFilter'
        400:
          description: not found
          schema:
            type: object
            properties:
              message:
                type: string
                example: token with id 12345 not found for account 54321
                description: The shared token or query filter could not be found
        403:
          description: forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: Insufficient privileges
                description: Insufficient privileges. Contact our Support Team for access to this API feature.
        503:
          description: service temporarily unavailable. please try again.
    post:
      operationId: createFilter
      summary: Create a token filter
      description: >-
        Use this endpoint to create a new token filter.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Create, update, or delete token filters
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/QueryFilter'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/QueryFilter'
        400:
          description: not found
          schema:
            type: object
            properties:
              message:
                type: string
                example: token with id 12345 not found for account 54321
                description: The shared token or query filter could not be found
        403:
          description: forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: Insufficient privileges
                description: Insufficient privileges. Contact our Support Team for access to this API feature.
        503:
          description: service temporarily unavailable. please try again.
  /shared-tokens/filters/{id}:
    get:
      operationId: getFilter
      summary: Retrieve a token filter by ID
      description: >-
        Returns a token filter as a JSON object.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Retrieve token filters
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the token filter
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/shared-tokens/filters/345" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <API token>"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/QueryFilter'
        400:
          description: not found
          schema:
            type: object
            properties:
              message:
                type: string
                example: token with id 12345 not found for account 54321
                description: The shared token or query filter could not be found
        403:
          description: forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: Insufficient privileges
                description: Insufficient privileges. Contact our Support Team for access to this API feature.
        503:
          description: service temporarily unavailable. please try again.
    delete:
      operationId: deleteFilter
      summary: Delete a token filter
      description: >-
        Use this endpoint delete a token filter.


        <span style='color: red'>**Warning:**</span> Deleting a token filter can change the behavior of your integrations. As a best practice, test all integrations when updating or deleting shared tokens or filters.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Create, update, or delete token filters
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the token filter
      x-code-samples:
        - lang: cURL
          source: 'curl -X DELETE "https://api.logz.io/v1/shared-tokens/filters/345" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <API token>"'
      responses:
        200:
          description: successful operation
        400:
          description: not found
          schema:
            type: object
            properties:
              message:
                type: string
                example: token with id 12345 not found for account 54321
                description: The shared token or query filter could not be found
        403:
          description: forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: Insufficient privileges
                description: Insufficient privileges. Contact our Support Team for access to this API feature.
        503:
          description: service temporarily unavailable. please try again.
  /shared-tokens/{id}:
    get:
      operationId: getToken
      summary: Retrieve a shared token by ID
      description: >-
        Returns a shared token as a JSON object.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Retrieve shared tokens
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the shared token
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/shared-tokens/1242" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <API token>"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SharedToken'
        400:
          description: not found
          schema:
            type: object
            properties:
              message:
                type: string
                example: token with id 12345 not found for account 54321
                description: The shared token or query filter could not be found
        403:
          description: forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: Insufficient privileges
                description: Insufficient privileges. Contact our Support Team for access to this API feature.
        503:
          description: service temporarily unavailable. please try again.
    put:
      operationId: updateToken
      summary: Update a shared token
      description: >-
        Use this endpoint change the filters attached to a shared token.


        <span style='color: red'>**Warning:**</span> Updating a shared token can change the behavior of your integrations. As a best practice, test all integrations when updating or deleting shared tokens or filters.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Create, update, or delete shared tokens
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/UpdateSharedTokenRequest'
      x-code-samples:
        - lang: cURL
          source: 'curl -X PUT "https://api.logz.io/v1/shared-tokens/1242" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <API token>" -d "{\"filters\":[339]}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SharedToken'
        400:
          description: not found
          schema:
            type: object
            properties:
              message:
                type: string
                example: token with id 12345 not found for account 54321
                description: The shared token or query filter could not be found
        403:
          description: forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: Insufficient privileges
                description: Insufficient privileges. Contact our Support Team for access to this API feature.
        503:
          description: service temporarily unavailable. please try again.
    delete:
      operationId: deleteToken
      summary: Delete a shared token
      description: >-
        Use this endpoint delete a shared token.


        <span style='color: red'>**Warning:**</span> Deleting a shared token can change the behavior of your integrations. As a best practice, test all integrations when updating or deleting shared tokens or filters.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Create, update, or delete shared tokens
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the shared token
      x-code-samples:
        - lang: cURL
          source: 'curl -X DELETE "https://api.logz.io/v1/shared-tokens/1250" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <API token>"'
      responses:
        204:
          description: successful operation
        400:
          description: not found
          schema:
            type: object
            properties:
              message:
                type: string
                example: token with id 12345 not found for account 54321
                description: The shared token or query filter could not be found
        403:
          description: forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: Insufficient privileges
                description: Insufficient privileges. Contact our Support Team for access to this API feature.
        503:
          description: service temporarily unavailable. please try again.
  /shared-tokens:
    get:
      operationId: getAllTokens
      summary: Retrieve all shared tokens
      description: >-
        Returns an array of JSON objects, where each object shows information for one token.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Retrieve shared tokens
      responses:
        200:
          description: successful operation
          schema:
            type: array
            uniqueItems: true
            items:
              $ref: '#/definitions/SharedToken'
        400:
          description: not found
          schema:
            type: object
            properties:
              message:
                type: string
                example: token with id 12345 not found for account 54321
                description: The shared token or query filter could not be found
        403:
          description: forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: Insufficient privileges
                description: Insufficient privileges. Contact our Support Team for access to this API feature.
        503:
          description: service temporarily unavailable. please try again.
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/shared-tokens" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <API token>"'
    post:
      operationId: createToken
      summary: Create a shared token
      description: >-
        Use this endpoint to create a new shared token.


        **Note:** This endpoint requires permissions that must be set by our Support team. Please email [help@logz.io](mailto:help@logz.io) for assistance.
      tags:
        - Create, update, or delete shared tokens
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/CreateSharedTokenRequest'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SharedToken'
        400:
          description: not found
          schema:
            type: object
            properties:
              message:
                type: string
                example: token with id 12345 not found for account 54321
                description: The shared token or query filter could not be found
        403:
          description: forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: Insufficient privileges
                description: Insufficient privileges. Contact our Support Team for access to this API feature.
        503:
          description: service temporarily unavailable. please try again.
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/shared-tokens" -H  "accept: application/json" -H  "content-type: application/json" -H  "X-API-TOKEN: <API token>" -d "{ \"tokenName\": \"Support shared token\", \"filters\":[339]}"'

  # ::::: SNAPSHOTS
  /snapshotter:
    post:
      tags:
        - Create snapshots
      summary: Create a snapshot
      description: ''
      operationId: createSnapshot
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/SnapshotCreateRequest'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SnapshotCreateResponse'
  /snapshotter/{snapshotId}:
    get:
      tags:
        - Retrieve snapshots
      summary: Retrieve snapshot by ID
      description: ''
      operationId: getSnapshot
      parameters:
        - name: snapshotId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SnapshotGetResponse'

  # ::::: USER MANAGEMENT
  /user-management:
    get:
      tags:
        - Retrieve users
      summary: Retrieve all users
      description: Returns a list of users as an array of JSON objects.
      operationId: listUsers
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/user-management" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <API token>"'
    post:
      tags:
        - Create, update, or delete users
      summary: Create a user
      description: ''
      operationId: createUser
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/UserManagementUpsertRequest'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/UserManagementUpsertResponse'
      x-code-samples:
        - lang: cURL
          source: 'curl -X POST "https://api.logz.io/v1/user-management" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <API token>" -d "{ \"username\": \"artvandelay@kramerica.com\",  \"fullName\": \"Art Vandelay\",  \"accountID\": 11111,  \"roles\": [ 2 ]}"'
  /user-management/{id}:
    get:
      tags:
        - Retrieve users
      summary: Retrieve a user by ID
      description: Returns user information and permissions as a JSON object
      operationId: getUser
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the user
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/User'
      x-code-samples:
        - lang: cURL
          source: 'curl -X GET "https://api.logz.io/v1/user-management/55555" -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <API token>"'
    put:
      tags:
        - Create, update, or delete users
      summary: Update a user
      description: Use this endpoint to update an existing user's details or permissions.
      operationId: updateUser
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/UserManagementUpsertRequest'
        - name: id
          in: path
          required: true
          type: integer
          format: int32
          description: ID of the user
      x-code-samples:
        - lang: cURL
          source: 'curl -X PUT "https://api.logz.io/v1/user-management/12345"  -H "accept: application/json" -H "content-type: application/json" -H "X-API-TOKEN: <API token>" -d "{ \"username\": \"drvenkman@gbusters.com\",  \"fullName\": \"Peter Venkman\",  \"accountID\": 13485,  \"roles\": [ 2 ]}"'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/UserManagementUpsertResponse'
    delete:
      tags:
        - Create, update, or delete users
      summary: Delete a user
      description: ''
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: successful operation
  /user-management/suspend/{id}:
    post:
      tags:
        - Create, update, or delete users
      summary: Suspend a user
      description: ''
      operationId: suspendUser
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: successful operation
  /user-management/unsuspend/{id}:
    post:
      tags:
        - Create, update, or delete users
      summary: Unsuspend a user
      description: ''
      operationId: unsuspendUser
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: successful operation



definitions:
  # ::::: ACCOUNTS DEFINITIONS
  AccountUtilizationSettings:
    type: object
    description: Settings for logging metrics on your account utilization,&nbsp; such as used and expected data volume at current indexing rate.
    properties:
      frequencyMinutes:
        type: integer
        format: int32
        description: How often utilization metrics are written to logs, in minutes
        example: 5
      utilizationEnabled:
        type: boolean
        description: If utilization metrics are written to logs, `true`. Otherwise, `false`.
        example: true
  AccountView:
    type: object
    properties:
      accountId:
        type: integer
        format: int32
      accountName:
        type: string
      accountToken:
        type: string
      active:
        type: boolean
      esIndexPrefix:
        type: string
      maxDailyGB:
        type: number
        format: float
      retentionDays:
        type: integer
        format: int32
        description: Data retention time, in days
  DailyUsagesList:
    type: object
    properties:
      usage:
        type: array
        items:
          $ref: '#/definitions/LHDailyCount'
  DetailedTimeBasedAccount:
    type: object
    properties:
      subAccountRelation:
        $ref: '#/definitions/SubAccountRelation'
      account:
        $ref: '#/definitions/AccountView'
      sharingObjectsAccounts:
        type: array
        items:
          $ref: '#/definitions/AccountView'
      utilizationSettings:
        $ref: '#/definitions/AccountUtilizationSettings'
      dailyUsagesList:
        $ref: '#/definitions/DailyUsagesList'
      docSizeSetting:
        $ref: '#/definitions/DocSizeSetting'
  LHDailyCount:
    type: object
    properties:
      date:
        type: integer
        format: int64
      bytes:
        type: integer
        format: int64
  SharingAccount:
    type: object
    properties:
      accountId:
        type: integer
        format: int32
        description: ID of the account
        example: 88888
      accountName:
        type: string
        description: Name of the account
        example: dev group 8
  SubAccountRelation:
    type: object
    description: Properties of the sub accounts related to this main account
    properties:
      ownerAccountId:
        type: integer
        format: int32
        description: ID of the main account
        example: 88765
      subAccountId:
        type: integer
        format: int32
        description: ID of the sub account
        example: 89234
      searchable:
        $ref: "#/definitions/Searchable"
      accessible:
        $ref: "#/definitions/Accessible"
      createdDate:
        type: string
        format: date-time
        description: >-
          Date this account was created.
          Format: `{yyyy}-{mm}-{dd}T{hh}:{mm}:{ss}Z`
        example: 2018-02-22T09:14:53Z
      lastUpdatedDate:
        type: string
        format: date-time
        description: >-
          Date this account was last updated.
          Format: `{yyyy}-{mm}-{dd}T{hh}:{mm}:{ss}Z`
        example: 2018-04-01T19:18:38Z
      lastUpdaterUserId:
        type: integer
        format: int32
        description: ID of the user who last updated this account
        example: 33342
      type:
        type: string
        enum:
          - OWNER_ACCOUNT
          - SUB_ACCOUNT
          - TIMELESS_INDEX
          - ALL
        description: Account type
        example: SUB_ACCOUNT
  TimeBasedAccount:
    type: object
    properties:
      accountId:
        type: integer
        format: int32
        description: ID of the account
        example: 99999
      email:
        type: string
        description: Email address of the user who created the account
        example: them@mycompany.com
      accountName:
        type: string
        description: Name of the account
        example: 404 errors
      accountToken:
        type: string
        description: Account token (unique to this account)
        example: f483abe93b
      maxDailyGB:
        type: number
        format: float
        description: Maximum daily usage, in GB
        example: 100
      retentionDays:
        type: integer
        format: int32
        description: Data retention time, in days
        example: 5
      searchable:
        $ref: "#/definitions/Searchable"
      accessible:
        $ref: "#/definitions/Accessible"
      docSizeSetting:
        $ref: '#/definitions/DocSizeSetting'
      sharingObjectsAccounts:
        type: array
        items:
          $ref: '#/definitions/SharingAccount'
        description: Accounts that can access this account's data
      utilizationSettings:
        $ref: '#/definitions/AccountUtilizationSettings'
  TimeBasedAccountCreationResponse:
    type: object
    properties:
      accountId:
        type: integer
        format: int32
        description: ID of the account
        example: 99999
      accountToken:
        type: string
        description: Account token (unique to this account)
        example: x93afghvexbn841h45vkjn5
  TimeBasedAccountUpsertRequest:
    type: object
    required:
      - email
      - accountName
      - sharingObjectsAccounts
      - retentionDays
    properties:
      email:
        type: string
        pattern: "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$"
        description: Account administrator's email address
        example: help@logz.io
      accountName:
        type: string
        description: Name of the account
        example: AWS Lambda svr 3
      maxDailyGB:
        type: number
        format: float
        description: Maximum daily usage, in GB
        example: 5
        default: 1
      retentionDays:
        type: integer
        format: int32
        description: Data retention time, in days
        minimum: 1
        example: 5
      searchable:
        $ref: "#/definitions/Searchable"
      accessible:
        $ref: "#/definitions/Accessible"
      sharingObjectsAccounts:
        type: array
        items:
          type: integer
          format: int32
          example: [ 88888, 55555 ]
        description: IDs of accounts that can access this account's data
      docSizeSetting:
        $ref: '#/definitions/DocSizeSetting'
      utilizationSettings:
        $ref: '#/definitions/AccountUtilizationSettings'
  Searchable:
    type: boolean
    description: If other accounts can search this account's logs, `true`. Otherwise, `false`.
    default: false
    example: true
  Accessible:
    type: boolean
    description: If users of the main account can access this account, `true`. Otherwise, `false`.
    default: false
    example: false
  DocSizeSetting:
    type: boolean
    description: If document size is attached to logs, `true`. Otherwise, `false`.
    default: false
    example: true

  # ::::: TRIGGERS DEFINITIONS
  SearchBasedTrigger:
    type: object
    required:
      - output
      - search
      - triggerOn
    properties:
      id:
        type: integer
        format: int32
        description: ID of the alert
      name:
        type: string
        description: Name of the alert
        example: 404 errors
      description:
        type: string
        description: Detailed description of the alert
        example: Trigger alert if more than 50 404 errors in 1 minute
      enabled:
        type: boolean
        description: If this alert is enabled, `true`. Otherwise, `false`.
      search:
        $ref: '#/definitions/TriggerSearchParameters'
      triggerOn:
        $ref: '#/definitions/TriggerOn'
      output:
        $ref: '#/definitions/TriggerOutput'
      lastUpdatedOn:
        type: integer
        format: int64
      lastUpdateBy:
        type: string
      createdOn:
        type: integer
        format: int64
      createdBy:
        type: string
  TriggerSearchParameters:
    type: object
    required:
      - queryString
    properties:
      queryString:
        type: string
        description: Search query used by the alert
        example: loglevel:ERROR
      filter:
        type: string
        description: Filter to be performed on `queryString`
        example: {'bool':{'must':[{'match':{'type':'mytype'}}],'must_not':[]}}
      groupBy:
        type: array
        items:
          type: string
        maxItems: 3
        minItems: 0
        description: Field to group results by
        example: geoip.country_name
      periodInMinutes:
        type: integer
        format: int32
        description: The time period for the threshold to be passed, in minutes.
      source:
        $ref: '#/definitions/TriggerSearchSources'
      metricsAggregations:
        type: array
        items:
          $ref: '#/definitions/Aggregation'
  TriggerSearchSources:
    type: object
    properties:
      allTimelessIndices:
        type: boolean
        description: If you want this alert to query all timeless accounts, `true`. Otherwise, `false`.
      timelessIndices:
        type: array
        items:
          type: integer
          format: int32
          description: ID of timeless account
        description: Array of timeless account IDs to query
        example: [ 33654, 15322 ]
      allSubAccounts:
        type: boolean
        description: If you want this alert to query all sub accounts, `true`. Otherwise, `false`.
      subAccountsIds:
        type: array
        items:
          type: integer
          format: int32
        description: Array of sub account IDs to query.
        example: [ 12332, 78997 ]
  Aggregation:
    type: object
    properties:
      aggregationType:
        type: string
        enum:
          - SUM
          - MIN
          - MAX
          - AVG
          - COUNT
          - UNIQUE_COUNT
          - NONE
        description: With `fieldToAggregateOn`, this defines the aggregate function to be used.
        example: UNIQUE_COUNT
      fieldToAggregateOn:
        type: string
        description: With `aggregationType`, this defines the field to be aggregated.
        example: request
  TriggerOn:
    type: object
    # discriminator: type
    properties:
      type:
        type: string
        enum:
          - CONDITION
          - SCHEDULE
        description: If this alert will trigger using a threshold per time period, `CONDITION`. If this alert will trigger at scheduled time intervals, `SCHEDULE`.
  TriggerOutput:
    type: object
    required:
      - format
      - target
    properties:
      format:
        $ref: '#/definitions/Format'
      target:
        $ref: '#/definitions/Target'
  Format:
    type: object
    # discriminator: type
  Target:
    type: object
    properties:
      emailNotifications:
        type: string
      notificationEndpoints:
        type: array
        items:
          $ref: '#/definitions/NotificationEndpoint'
      suppressNotificationInMinutes:
        type: integer
        format: int32
        minimum: 5
      timelessIndex:
        $ref: '#/definitions/TimelessIndexTarget'
  NotificationEndpoint:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: ID of the notification endpoint
        example: 240
      accountId:
        type: integer
        format: int32
        description: ID of the owner account
        example: 88888
      type:
        type: string
        enum:
          - HTTP
      templateName:
        type: string
      description:
        type: string
      title:
        type: string
      createdDate:
        type: string
        format: date-time
      modifiedDate:
        type: string
        format: date-time
      params:
        $ref: '#/definitions/NotificationEndpointParams'
  NotificationEndpointParams:
    type: object
  TimelessIndexTarget:
    type: object
    properties:
      id:
        type: integer
        format: int32
      logType:
        type: string
  FilteredAlertsRequest:
    type: object
    properties:
      from:
        type: integer
        format: int32
        minimum: 0
      size:
        type: integer
        format: int32
        minimum: 1
      search:
        type: string
      severities:
        type: array
        items:
          type: string
          enum:
            - LOW
            - MEDIUM
            - HIGH
      updatedBy:
        type: array
        items:
          type: string
      createdBy:
        type: array
        items:
          type: string
      activeState:
        type: array
        items:
          type: string
          enum:
            - Active
            - Dismissed
      emailNotifications:
        type: array
        items:
          type: string
      notificationsEndpointIds:
        type: array
        items:
          type: integer
          format: int32
      lastTriggered:
        $ref: '#/definitions/LastTriggeredFilter'
      sortBy:
        type: string
        enum:
          - name
          - severity
          - createdAt
          - updatedAt
      sortOrder:
        type: string
        enum:
          - ASC
          - DESC
  LastTriggeredFilter:
    type: object
    required:
      - fromDate
      - toDate
    properties:
      fromDate:
        type: integer
        format: int64
      toDate:
        type: integer
        format: int64
  PageResponseSearchBasedTrigger:
    type: object
    properties:
      pageSize:
        type: integer
        format: int32
        minimum: 0
        maximum: 500
      from:
        type: integer
        format: int32
        minimum: 0
        maximum: 2147483647
      total:
        type: integer
        format: int64
        minimum: 0
        maximum: 500
      results:
        type: array
        items:
          $ref: '#/definitions/SearchBasedTrigger'
  TriggerContributingUser:
    type: object
    properties:
      username:
        type: string
        readOnly: true
      fullName:
        type: string
        readOnly: true
      isToken:
        type: boolean
      token:
        type: boolean
  FilteredTriggersRequest:
    type: object
    properties:
      from:
        type: integer
        format: int32
        minimum: 0
      size:
        type: integer
        format: int32
        minimum: 1
      search:
        type: string
      updatedBy:
        type: array
        items:
          type: string
      createdBy:
        type: array
        items:
          type: string
      activeState:
        type: array
        items:
          type: string
          enum:
            - Active
            - Dismissed
      sortBy:
        type: string
      sortOrder:
        type: string
        enum:
          - ASC
          - DESC

  # ::::: AUDIT TRAIL DEFINITIONS
  AuditTrailEventTypesResponse:
    type: object
    properties:
      eventTypes:
        type: array
        items:
          type: string
        description: Event types in the audit trail
        example: [ "Added user", "Admin created a sub account", "Changed password", "Failed login", "Login", "Logz.io admin has enabled a sawmill configuration", "Suspended user", "User created a token", "User installed an ELK app" ]
  AuditEventData:
    type: object
    properties:
      auditEventUser:
        $ref: '#/definitions/AuditEventUser'
      date:
        type: integer
        format: int64
        description: Date of the audit event, as a Unix epoch integer.
        example: 1527168668
      auditEventTypeTitle:
        type: string
        description: The event type
        example: Admin created a sub account
      ip:
        type: string
        description: IP address of the client device that generated the event
        example: 52.203.237.249
      geoLocation:
        type: string
      extraDataList:
        type: array
        items:
          $ref: '#/definitions/AuditEventExtraData'
      valid:
        type: boolean
  AuditEventExtraData:
    type: object
    properties:
      fieldName:
        type: string
      oldValue:
        type: string
      newValue:
        type: string
  AuditEventTypeData:
    type: object
    properties:
      auditEventType:
        type: string
      auditEventTypeTitle:
        type: string
  AuditEventUser:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: ID of the user
        example: 5374
      fullName:
        type: string
        description: User's first and last name
        example: Larry Appleton
      deleted:
        type: boolean
        description: If this user has been deleted, `true`. Otherwise, `false`.
        example: false
      userToken:
        type: boolean
        description: ??
  AuditTrailFilteredResponse:
    type: object
    properties:
      pageSize:
        type: integer
        format: int32
        minimum: 0
        maximum: 500
      from:
        type: integer
        format: int32
        minimum: 0
        maximum: 2147483647
      total:
        type: integer
        format: int64
        minimum: 0
        maximum: 500
      results:
        type: array
        items:
          $ref: '#/definitions/AuditEventData'
      auditEventUsersList:
        type: array
        items:
          $ref: '#/definitions/AuditEventUser'
      auditEventTypesList:
        type: array
        items:
          $ref: '#/definitions/AuditEventTypeData'
  AuditTrailFilterRequest:
    type: object
    properties:
      size:
        type: integer
        format: int32
        minimum: 0
        maximum: 500
        description: Number of records to return
        example: 150
      from:
        type: integer
        format: int32
        minimum: 0
        maximum: 2147483647
      auditEventUser:
        $ref: '#/definitions/AuditEventUser'
      auditEventType:
        type: string
      fromDate:
        type: integer
        format: int64
      toDate:
        type: integer
        format: int64
      sortDescending:
        type: boolean
      includeFiltersData:
        type: boolean

  # ::::: CLOUDTRAIL DEFINITIONS
  CloudTrailResponse:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: ??
        example: 15
      accessKey:
        type: string
        description: AWS S3 access key
        example: ee07df5801500745419c6dff
      bucket:
        type: string
        description: AWS S3 bucket name
        example: cloudtrails bucket
      prefix:
        type: string
        description: AWS S3 key prefix
        example: AWSLogs/7364988021587/myprefix
      active:
        type: boolean
        description: ??
        example: true
  IdBean:
    type: object
    properties:
      id:
        type: integer
        format: int32
        readOnly: true
        minimum: 1
        description: ??
  CloudTrailRequest:
    type: object
    properties:
      accessKey:
        type: string
        description: AWS S3 access key
        example: ee07df5801500745419c6dff
      secretKey:
        type: string
        description: AWS secret access key
        example: 506d891fe2163a511b450eddc3279539f6
      bucket:
        type: string
        description: AWS S3 bucket name
        example: LogzioBucket
      prefix:
        type: string
        description: AWS S3 key prefix
        example: AWSLogs/7364988021587/myprefix
      active:
        type: boolean
        description: ??
  MessageBean:
    type: object
    properties:
      message:
        type: string
        readOnly: true

  # ::::: NOTIFICATION ENDPOINTS DEFINITIONS
  EndpointUpsertResponse:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: "ID of the notification endpoint. If the API call was made where `test=true`, then no changes are made to the endpoint. In this case, the response body contains `{\"id\": -1}` to indicate that a test message was sent."
        example: 88
  SlackEndpointUpsertRequest:
    type: object
    properties:
      title:
        type: string
        description: Name of the endpoint
        example: New Slack endpoint
      description:
        type: string
        description: Detailed description of the endpoint
        example: Sends notifications to logzio-alerts channel
      url:
        type: string
        description: Your Slack webhook URL
        example: https://hooks.slack.com/services/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
  CustomEndpointUpsertRequest:
    type: object
    properties:
      title:
        type: string
        description: Name of the endpoint
        example: New custom endpoint
      description:
        type: string
        description: Detailed description of the endpoint
        example: Sends notifications to my custom endpoint
      url:
        type: string
        description: URL where the notification will be sent
        example: https://my.custom-endpoint.com
      method:
        type: string
        description: The HTTP used to send the notification
        example: POST
      headers:
        type: string
        description: Header parameters to be included in the HTTP request. Each parameter-value pair is comma-separated.
        example: authKey=6e30-60a9-3591
      bodyTemplate:
        type: object
        description: JSON object that serves as the template for the message body.
        additionalProperties:
          type: object
        example: {"subject": "Alert from Logz.io", "message": {"severity": "LOW", "body": "Check Logz.io for log activity"}}
  PagerDutyEndpointUpsertRequest:
    type: object
    properties:
      title:
        type: string
        description: Name of the endpoint
        example: PagerDuty endpoint
      description:
        type: string
        description: Detailed description of the endpoint
        example: Sends notifications to PagerDuty
      serviceKey:
        type: string
        description: API key from PagerDuty
        example: 94ad63254a1397a51a1ae340c4f10890
  BigPandaEndpointUpsertRequest:
    type: object
    properties:
      title:
        type: string
        description: Name of the endpoint
        example: BigPanda endpoint
      description:
        type: string
        description: Detailed description of the endpoint
        example: Sends notifications to BigPanda
      apiToken:
        type: string
        description: API authentication token from BigPanda
        example: 94ad63254a1397a51a1ae340c4f10890
      appKey:
        type: string
        description: Application key from BigPanda
        example: c687f9231619d7d7b959f33e4cc821a5
  DatadogEndpointUpsertRequest:
    type: object
    properties:
      title:
        type: string
        description: Name of the endpoint
        example: Datadog endpoint
      description:
        type: string
        description: Detailed description of the endpoint
        example: Sends notifications to Datadog
      apiKey:
        type: string
        description: API key from Datadog
        example: c687f9231619d7d7b959f33e4cc821a5
  VictoropsEndpointUpsertRequest:
    type: object
    required:
      - messageType
      - routingKey
      - serviceApiKey
    properties:
      title:
        type: string
        description: Name of the endpoint
        example: VictorOps endpoint
      description:
        type: string
        description: Detailed description of the endpoint
        example: Sends notifications to VictorOps
      routingKey:
        type: string
        description: Alert routing key from VictorOps
        example: devops
      messageType:
        type: string
        description: VictorOps REST API `message_type`. For more information, see [VictorOps knowledge base](https://help.victorops.com/knowledge-base/victorops-restendpoint-integration/).
        example: WARNING
      serviceApiKey:
        type: string
        description: API key from VictorOps
        example: c687f9231619d7d7b959f33e4cc821a5
  Endpoint:
    type: object
    properties:
      endpointType:
        type: string
        enum:
          - BigPanda
          - Slack
          - Datadog
          - Custom
          - PagerDuty
          - VictorOps
        description: The notification endpoint type that will receive alert messages
        example: Slack
      id:
        type: integer
        format: int32
        description: ID of the notification endpoint
        example: 88
      title:
        type: string
        description: Name of the endpoint
        example: Slack
      description:
        type: string
        description: Detailed description of the endpoint
        example: Endpoint for sending alerts to Slack

  # ::::: KIBANA IMPORT/EXPORT DEFINITIONS
  KibanaExportResponse:
    type: object
    properties:
      kibanaVersion:
        type: string
        readOnly: true
        description: The version of Kibana used at the time of export
        example: 4.0.0-beta3
      hits:
        type: array
        readOnly: true
        items:
          type: object
        description: Exported Kibana objects
  KibanaExportRequest:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        enum:
          - search
          - visualization
          - dashboard
        description: The object type to export
  KibanaImportResponse:
    type: object
    properties:
      created:
        type: array
        readOnly: true
        items:
          type: string
          example: E-commerce-App-Transactions-overtime
        description: Name of Kibana objects that were created
      updated:
        type: array
        readOnly: true
        items:
          type: string
          example: HTTP-Response-over-time
        description: Names of the Kibana objects that were overwritten. Objects are shown here only if `override` was `true` in the import call.
      ignored:
        type: array
        readOnly: true
        items:
          type: string
          example: Transaction-overtime
        description: Names of the Kibana objects that were not overwritten. Objects are shown here only if `override` was `false` in the import call.
      failed:
        type: array
        readOnly: true
        items:
          type: string
          example: Apache-Response-Over-Time
        description: Names of the Kibana objects that could not be created, updated, or ignored.
  KibanaImportRequest:
    type: object
    properties:
      kibanaVersion:
        type: string
        description: The version of Kibana used at the time of export. This must match the current version of Kibana that you're importing to.
        example: 4.0.0-beta3
      override:
        type: boolean
        description: >-
          To update an existing object with the same ID, `true`. Otherwise, `false`.


          If override is `true`, response message shows overwritten objects as `updated`. If override is `false`, no existing objects are updated, and response message shows these objects as `ignored`.
        example: false
      hits:
        type: array
        items:
          type: object
          additionalProperties:
            type: object
        description: >-
          Each JSON object in the array represents a discrete Kibana object.


          **Note:** As a best practice, import only objects that were exported from Kibana.

  # ::::: SEARCH, SCROLL DEFINITIONS
  ScrollResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
        readOnly: true
      scrollId:
        type: string
        readOnly: true
      hits:
        type: string
        readOnly: true
  ScrollRequest:
    type: object
    properties:
      query:
        type: object
        additionalProperties:
          type: object
      size:
        type: integer
        format: int32
      from:
        type: integer
        format: int32
        minimum: 0
      sort:
        type: array
        items:
          type: object
      _source:
        type: object
        additionalProperties:
          type: object
      post_filter:
        type: object
        additionalProperties:
          type: object
      scroll_id:
        type: string
      scroll:
        type: string

  # ::::: SHARED TOKENS DEFINITIONS
  QueryFilter:
    type: object
    required:
      - field
      - value
    properties:
      id:
        type: integer
        format: int32
        description: ID of the token filter
        example: 339
      field:
        type: string
        pattern: '^[a-zA-Z0-9_@.-]+$'
        description: The field to be filtered
      value:
        type: string
        pattern: '^[a-zA-Z0-9_@.-]+$'
        description: The filter query
      description:
        type: string
        description: Name of the filter
        example: 503 responses
  SharedToken:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: ID of the shared token
        example: 1241
      name:
        type: string
        description: Descriptive name of the token
        example: Snapshotting token
      token:
        type: string
        description: The token
        example: 6c36edf51-cf93883aa35-5bc6ce6-7bcfe60d87
      filters:
        type: array
        uniqueItems: true
        items:
          type: integer
          format: int32
        description: Array of filter IDs attached to each token. If no filter is attached, `null`.
        example: [339, 340]
  CreateSharedTokenRequest:
    type: object
    properties:
      tokenName:
        type: string
        default: string
        description: Name of the token
        example: Support team token
      filters:
        type: array
        uniqueItems: true
        items:
          type: integer
          format: int32
        description: IDs of filters to attach to the token
        example: [ 339 ]
  UpdateSharedTokenRequest:
    type: object
    required:
      - filters
    properties:
      filters:
        type: array
        uniqueItems: true
        items:
          type: integer
          format: int32
          description: ID of the filter
          example: 339
        description: IDs of filters to attach to the token. To remove all filters, use an empty array `[]`.

  # ::::: SNAPSHOTS DEFINITIONS
  SnapshotCreateResponse:
    type: object
    properties:
      snapshotId:
        type: integer
        format: int32
  SnapshotCreateRequest:
    type: object
    required:
      - snapshotTimeZone
      - snapshotType
      - timeFrameFrom
      - timeFrameTo
    properties:
      snapshotType:
        type: string
        enum:
          - DASHBOARD
          - VISUALIZATION
          - SAVED_SEARCH
      snapshotSavedObjectId:
        type: string
      slackWebhookUrls:
        type: array
        items:
          type: string
      endpoints:
        type: array
        items:
          type: integer
          format: int32
      emails:
        type: array
        items:
          type: string
      message:
        type: string
      timeFrameFrom:
        type: integer
        format: int64
      timeFrameTo:
        type: integer
        format: int64
      snapshotTimeZone:
        type: string
      queryString:
        type: string
      darkTheme:
        type: boolean
  SnapshotGetResponse:
    type: object
    properties:
      snapshotId:
        type: integer
        format: int32
      accountId:
        type: integer
        format: int32
      snapshotType:
        type: string
        enum:
          - DASHBOARD
          - VISUALIZATION
          - SAVED_SEARCH
      status:
        type: string
        enum:
          - SUCCESS
          - FAILED
          - IN_PROGRESS
      snapshotSavedObjectName:
        type: string
      imageUrl:
        type: string
      appLinkUrl:
        type: string
      message:
        type: string
      timeFrameFrom:
        type: integer
        format: int64
      timeFrameTo:
        type: integer
        format: int64
      snapshotTimeZone:
        type: string
  SnapshotNotification:
    type: object
    properties:
      id:
        type: integer
        format: int32
      type:
        type: string
        enum:
          - EMAIL
          - SLACK
      address:
        type: string
      status:
        type: string
        enum:
          - PENDING
          - IN_WORK
          - NEED_RETRY
          - FAILED
          - SUCCESS
  SnapshotRequest:
    type: object
    properties:
      id:
        type: integer
        format: int32
      snapshotType:
        type: string
        enum:
          - DASHBOARD
          - VISUALIZATION
          - SAVED_SEARCH
      snapshotSavedObjectName:
        type: string
      snapshotUrl:
        type: string
      appLinkUrl:
        type: string
      recipients:
        type: array
        items:
          $ref: '#/definitions/SnapshotNotification'
      message:
        type: string
      timeFrameFrom:
        type: integer
        format: int64
      timeFrameTo:
        type: integer
        format: int64
      snapshotTimeZone:
        type: string

  # ::::: USER MANAGEMENT DEFINITIONS
  User:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: ID of the user
        example: 33265
      username:
        type: string
        description: Email address used for signing in to Logz.io
        example: steve@winslows.com
      fullName:
        type: string
        description: First and last name of the user
        example: Stefan Urkel
      accountID:
        type: integer
        format: int32
        description: ID of the account attached to the user
        example: 55555
      roles:
        type: array
        items:
          type: integer
          format: int32
        description: For admin access, `2`. For user access, `3`.
        example: [3]
      active:
        type: boolean
        description: If the user is active, `true`. If the user is suspended, `false`.
        example: true
  UserManagementUpsertResponse:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: ID of the account
        example: 13485
  UserManagementUpsertRequest:
    type: object
    required:
      - fullName
      - username
    properties:
      username:
        type: string
        pattern: >-
          ^[_A-Za-z0-9-\+]+(\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\.[A-Za-z0-9-]+)*(\.[A-Za-z]{2,})$
        description: Email address used for signing in to Logz.io
        example: drvenkman@gbusters.com
      fullName:
        type: string
        description: User's first and last name
        example: Peter Venkman
      accountID:
        type: integer
        format: int32
        description: ID of the account attached to the user
      roles:
        type: array
        items:
          type: integer
          format: int32
        description: For admin access, `2`. For user access, `3`.
        example: [2]
